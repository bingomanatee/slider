
window.jQuery.fn.slider = function (options) {

    var value = parseInt(this.attr('value')) || 0;
    var minValue = options && options.hasOwnProperty('min') ? options.min : 0;
    var maxValue = options && options.hasOwnProperty('max') ? options.max : 100;
    var stepValue = options && options.hasOwnProperty('step') ? options.step : 1;
    var range = maxValue - minValue;
    var textOffset = (30 - 50)/2;

    function setValue(newValue, move) {
        value = Math.max(minValue, Math.min(newValue, maxValue));
        if (value > minValue && value < maxValue) {
            var offset = value - minValue;
            var rem = offset % stepValue;
            value -= rem;
        }

        if (options && options.onValue) {
            options.onValue(value);
        }

        this.find('.slider__value').text(Math.round(value));

        if (move){
            var movementRange = getMovementRangeBound();
            var progress = (value - minValue)/range;
            var left = progress * movementRange;
            this.find('.slider__thumb').css('left', left + 'px');
        }
    }

    var setValueBound = setValue.bind(this);

    this.html('<div class="slider">' +
        '<div class="slider__less"><div class="slider__less-thumb"></div></div>' +
        '<div class="slider__mid">' +
        '<div class="slider__thumb"><div class="slider__thumb-text slider__value">' + value + '</div></div>' +
        '<div class="slider__thumb-over-text"><div class="slider__thumb-over-text-inner slider__value">' + value + '</div></div>' +
        '</div>' +
        '<div class="slider__more"><div class="slider__more-thumb"></div></div>' +
        '</div>' /* +
     '<div class="feedback">' +
     '<p>mouseStart: <span class="mouseStart"></span></p>' +
     '<p>left: <span class="left"></span></p>' +
     '<p>firstMouse: <span class="firstMouse"></span></p>' +
     '<p>pageX: <span class="pageX"></span></p>' +
     '</div>' */);

    var thumbStart = 0;
    var firstMouse = true;
    var mouseStart = 0;

    this.find('.slider__less-thumb').click(function(){
        setValueBound(value - stepValue, true);
    });

    this.find('.slider__more-thumb').click(function(){
        setValueBound(value + stepValue, true);
    });

    function getMovementRange(){

        var thumbWidth = this.find('.slider__thumb').width();
        var width = this.find('.slider__mid').width();
        return width - thumbWidth;
    }

    var getMovementRangeBound = getMovementRange.bind(this);

    function onMove(event) {
        /*   this.find('.feedback .thumbStart').text(thumbStart);
         this.find('.feedback .firstMouse').text(firstMouse);
         this.find('.feedback .mouseStart').text(mouseStart);
         this.find('.feedback .pageX').text(event.pageX); */
        if (firstMouse) {
            mouseStart = event.pageX;
            thumbStart = this.find('.slider__thumb').position().left;
            firstMouse = false;
        } else {
            var mouseDiff = event.pageX - mouseStart;
            var left = (thumbStart + mouseDiff);

            var movementRange = getMovementRangeBound();
            left = Math.max(0, Math.min(left, movementRange));
            var progress = left / movementRange;
            setValueBound((progress * range) + minValue);
            this.find('.slider__thumb').css('left', left + 'px');

            this.find('.slider__thumb-over-text').css('left',  (left + textOffset) + 'px');
            /*   this.find('.feedback .left').text(left); */
        }
    }

    var onMoveBound = onMove.bind(this);

    function endTrackMouse() {
        this.off('mousemove', onMoveBound);
        this.find('.slider__mid').removeClass('slider__thumb-down');
        $(window.document).off('mouseup', endTrackMouseBound);
    }

    var endTrackMouseBound = endTrackMouse.bind(this);

    function trackMouse() {
        firstMouse = true;
        thumbStart = this.find('.slider__thumb').position().left;
        this.find('.slider__mid').addClass('slider__thumb-down');
        this.on('mousemove', onMoveBound);

        $(window.document).on('mouseup', endTrackMouseBound);
    }

    var trackMouseBound = trackMouse.bind(this);

    this.find('.slider__thumb').on('mousedown', trackMouseBound);

    return this;
};

/*!
 *
 *  Web Starter Kit
 *  Copyright 2015 Google Inc. All rights reserved.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *    https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License
 *
 */
/* eslint-env browser */
(function () {
    'use strict';

    // Check to make sure service workers are supported in the current browser,
    // and that the current page is accessed from a secure origin. Using a
    // service worker from an insecure origin will trigger JS console errors. See
    // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features
    var isLocalhost = Boolean(window.location.hostname === 'localhost' ||
            // [::1] is the IPv6 localhost address.
        window.location.hostname === '[::1]' ||
            // 127.0.0.1/8 is considered localhost for IPv4.
        window.location.hostname.match(
            /^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/
        )
    );

    if ('serviceWorker' in navigator &&
        (window.location.protocol === 'https:' || isLocalhost)) {
        navigator.serviceWorker.register('service-worker.js')
            .then(function (registration) {
                // Check to see if there's an updated version of service-worker.js with
                // new files to cache:
                // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-registration-update-method
                if (typeof registration.update === 'function') {
                    registration.update();
                }

                // updatefound is fired if service-worker.js changes.
                registration.onupdatefound = function () {
                    // updatefound is also fired the very first time the SW is installed,
                    // and there's no need to prompt for a reload at that point.
                    // So check here to see if the page is already controlled,
                    // i.e. whether there's an existing service worker.
                    if (navigator.serviceWorker.controller) {
                        // The updatefound event implies that registration.installing is set:
                        // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event
                        var installingWorker = registration.installing;

                        installingWorker.onstatechange = function () {
                            switch (installingWorker.state) {
                                case 'installed':
                                    // At this point, the old content will have been purged and the
                                    // fresh content will have been added to the cache.
                                    // It's the perfect time to display a "New content is
                                    // available; please refresh." message in the page's interface.
                                    break;

                                case 'redundant':
                                    throw new Error('The installing ' +
                                        'service worker became redundant.');

                                default:
                                // Ignore
                            }
                        };
                    }
                };
            }).catch(function (e) {
            console.error('Error during service worker registration:', e);
        });
    }

    window.jQuery('#slider-target').slider({
        onValue: function (value) {
            window.jQuery('.slider-1-value').text(value);
        }
    });
    window.jQuery('#slider-target2').slider(
        {min: -20, max: 3000, step: 100 ,onValue: function(value){
            window.jQuery('.slider-2-value').text(value);
        }}
    );
})();
